C51 COMPILER V9.60.0.0   TEXT1                                                             08/05/2020 03:52:12 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TEXT1
OBJECT MODULE PLACED IN text1.OBJ
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE text1.c LARGE OMF2 OPTIMIZE(2,SPEED) BROWSE INCDIR(..\hardware\delay;..\har
                    -dware\IIC;..\hardware\OLED;..\hardware\ADC;..\hardware\Mpu6050;..\hardware\KEY;..\hardware\LED;..\hardware\PWM;..\hardwa
                    -re\pca;..\hardware\timer;..\hardware\PID;..\hardware\CCD;..\hardware\UART;..\hardware\Motor) DEBUG TABS(2)

line level    source

   1          #include "common.h"
   2          #include "main.h"
   3          
   4          extern int mpu_gyro_x, mpu_gyro_y, mpu_gyro_z;
   5          extern int flag;
   6          extern struct P_pid pid_speed,pid_angle;
   7          extern unsigned long length;
   8          
   9          char flag_angle=0, flag_speed=0,flag_turn=0;
  10          extern int Balance_Pwm,Velocity_Pwm,last_Velocity_Pwm,Turn_Pwm;
  11          
  12          int AD_val_1_min=0;
  13          int AD_val_1_max=4095;
  14          int h1,h2,h3,h4,h5;
  15          float dcc;
  16          
  17          int uflag=0;
  18          
  19          int Encoder_Left,Encoder_Right; 
  20          
  21          char jifenflag  =0;
  22          
  23          extern int cnt_speed;
  24          extern int set_speed;
  25          int guiyi(int AD_VAL1)
  26          {
  27   1        float ad_VAL1;
  28   1        if(AD_VAL1>AD_val_1_max)  AD_VAL1=AD_val_1_max;     
  29   1                  //归一化
  30   1        ad_VAL1=100*(float)(AD_VAL1 - AD_val_1_min)/(AD_val_1_max-AD_val_1_min);
  31   1        
  32   1        return (int)ad_VAL1;
  33   1      }
  34          
  35          void main(void)
  36          {
  37   1        int i = 0,flag_1 = 0,a=0;
  38   1        int dat11 = 0,dat22 =0,a1=0;
  39   1        char test[50] ;
  40   1        
  41   1        
  42   1        init_all();
  43   1        P42= 1;P41 =0;
  44   1        while (1)
  45   1        { 
  46   2          if (uflag == 1)
  47   2          {
  48   3            spilt_str();
  49   3            uflag =0;
  50   3          }
  51   2          
  52   2          
  53   2          if (KEYScan(2) == 2)
C51 COMPILER V9.60.0.0   TEXT1                                                             08/05/2020 03:52:12 PAGE 2   

  54   2          {
  55   3            P43 = ~P43;
  56   3          }
  57   2          if(flag_angle == 1)
  58   2          {   
  59   3            flag_angle =0;
  60   3          
  61   3            stand();
  62   3            if (turn_off(tangle)==1||flag_stop ==0)
  63   3            { Pwm_set(0,0);}
  64   3            else
  65   3           { 
  66   4      //      if (Moto1>5)   a=-200;
  67   4      //      if (Moto1<-5)  a=+100; 
  68   4            Pwm_set(Moto1-a,Moto2);       
  69   4            }
  70   3          }
  71   2          
  72   2          if (flag_speed == 1)
  73   2          {
  74   3            //P55=~P55;
  75   3            flag_speed =0;   
  76   3            jifenflag=1;
  77   3            SpeedControl(set_speed);
  78   3          }
  79   2          
  80   2        /*  {
  81   2      //        P55=1;
  82   2      //        h1 = adc_once(ADC_P01, ADC_12BIT);
  83   2      //        h2 = adc_once(ADC_P11, ADC_12BIT);
  84   2      //        h3= adc_once(ADC_P12, ADC_12BIT);
  85   2      //        h4= adc_once(ADC_P16, ADC_12BIT);
  86   2      //        h5= adc_once(ADC_P17, ADC_12BIT);
  87   2      //        dcc=(float)(h1-h5)/(h1+h3+h5)*100;
  88   2      //        
  89   2      ////        sprintf(test,"%d\r\n",(int)dcc);
  90   2      ////        uart_putstr(test);
  91   2      //        guiyi(h1);
  92   2      //        //sprintf(test,"%d %d\r\n",guiyi(h1),h1);
  93   2      //        //uart_putstr(test);
  94   2      //        P55=0;
  95   2        
  96   2              
  97   2      //        sprintf(test,"%d %d %d %d % d\r\n",h1,h2,h3,h4,h5);
  98   2      //        uart_putstr(test);
  99   2                  //    if(tsl1401_finish_flag)
 100   2                  //    {
 101   2                  //      //发送图像到上位机
 102   2                  //      ccd_send_data(UART_1, ccd_data);
 103   2      
 104   2                  //      //采集完成标志位清除
 105   2                  //      tsl1401_finish_flag = 0;
 106   2                  //    }  
 107   2                }*/
 108   2        }     
 109   1      }
*** WARNING C280 IN LINE 39 OF text1.c: 'test': unreferenced local variable
 110          
 111          void init_all()
 112          {
 113   1      
 114   1        P42= 0;P41 =0;
C51 COMPILER V9.60.0.0   TEXT1                                                             08/05/2020 03:52:12 PAGE 3   

 115   1            EA = 0;
 116   1      //  OLED_Init();
 117   1          simiic_init();
 118   1          mpu6050_init();
 119   1        
 120   1          adc_init(ADC_P10,ADC_SYSclk_DIV_2);//5
 121   1          adc_init(ADC_P03,ADC_SYSclk_DIV_2);//4
 122   1          adc_init(ADC_P02,ADC_SYSclk_DIV_2);//3
 123   1          adc_init(ADC_P01,ADC_SYSclk_DIV_2);//2
 124   1          adc_init(ADC_P00,ADC_SYSclk_DIV_2);//1
 125   1        
 126   1      //      //pca_input_init();
 127   1      //   
 128   1      //      //speed_count_init();
 129   1      
 130   1            Timer_uart_init();        //串口蓝牙
 131   1            Timer0_init();            //电机控制
 132   1      ////      //ccd_init();
 133   1            pid_init();   
 134   1            EA = 1;
 135   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    519    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     28      68
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
