C51 COMPILER V9.53.0.0   I2C                                                               07/22/2020 14:45:23 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE I2C
OBJECT MODULE PLACED IN .\I2C.obj
COMPILER INVOKED BY: F:\MDK5\C51\BIN\C51.EXE ..\hardware\IIC\I2C.c LARGE OMF2 OPTIMIZE(2,SPEED) BROWSE INCDIR(..\hardwar
                    -e\delay;..\hardware\IIC;..\hardware\OLED;..\hardware\ADC;..\hardware\Mpu6050;..\hardware\KEY;..\hardware\LED;..\hardware
                    -\PWM;..\hardware\pca;..\hardware\timer;..\hardware\PID;..\hardware\CCD;..\hardware\UART) DEBUG PRINT(.\I2C.lst) TABS(3) 
                    -OBJECT(.\I2C.obj)

line level    source

   1          
   2          /*************************此部分为I2C总线的驱动程序*************************************/
   3          
   4          #include "stc8.h"
   5          #include "i2c.h"
   6          #include "delay.h"
   7          
   8          sbit SCL = P1 ^ 5; //I2C  时钟
   9          sbit SDA = P1 ^ 4; //I2C  数据
  10          
  11          //SDA方向控制
  12          void IO_SDA(u8 m)
  13          {
  14   1        if (m == 1)
  15   1        {
  16   2          P1M1 = 0X40; //配置SDA为输入
  17   2          P1M0 = 0X00;
  18   2        }
  19   1        else
  20   1        {
  21   2          P1M1 = 0X00; //恢复SDA双向io
  22   2          P1M0 = 0X00;
  23   2        }
  24   1      }
  25          
  26          //起动总线函数
  27          //Start_I2c();
  28          //功能:     启动I2C总线,即发送I2C起始条件.
  29          void IIC_Start()
  30          {
  31   1        SDA = 1; //发送起始条件的数据信号
  32   1        SCL = 1;
  33   1        delay4us(2);
  34   1        SDA = 0; //发送起始信号
  35   1        delay4us(2);
  36   1        SCL = 0; //钳住I2C总线，准备发送或接收数据
  37   1      }
  38          
  39          //结束总线函数
  40          //Stop_I2c();
  41          //功能:     结束I2C总线,即发送I2C结束条件.
  42          void IIC_Stop()
  43          {
  44   1        SCL = 0;
  45   1        SDA = 0; //发送结束条件的数据信号
  46   1        delay4us(2);
  47   1        SCL = 1; //结束条件建立时间大于4μs
  48   1        SDA = 1; //发送I2C总线结束信号
  49   1        delay4us(2);
  50   1      }
  51          
  52          //等待应答信号到来
C51 COMPILER V9.53.0.0   I2C                                                               07/22/2020 14:45:23 PAGE 2   

  53          //返回值：1，接收应答失败
  54          //        0，接收应答成功
  55          u8 IIC_Wait_Ack(void)
  56          {
  57   1        u8 Time = 0;
  58   1        IO_SDA(1); //配置SDA为输入
  59   1        SDA = 1;   //准备接收应答位
  60   1        delay4us(1);
  61   1        SCL = 1;
  62   1        delay4us(1);
  63   1        while (SDA)
  64   1        {
  65   2          Time++;
  66   2          if (Time > 250)
  67   2          {
  68   3            IIC_Stop();
  69   3            IO_SDA(0); //恢复SDA双向io
  70   3            return 1;  //无应答返回1
  71   3          }
  72   2        }
  73   1        SCL = 0; //时钟输出0
  74   1      
  75   1        IO_SDA(0); //恢复SDA双向io
  76   1        return 0;  //有应答返回0
  77   1      }
  78          
  79          //字节数据发送函数
  80          //SendByte(u8 c);
  81          //功能:     将数据c发送出去,可以是地址,也可以是数据
  82          void Write_IIC_Byte(u8 c)
  83          {
  84   1        u8 BitCnt;
  85   1        //条件 一定要开启总线 保持SCL处于0状态 才能进行写入
  86   1        for (BitCnt = 0; BitCnt < 8; BitCnt++) //要传送的数据长度为8位
  87   1        {
  88   2          if ((c << BitCnt) & 0x80)
  89   2            SDA = 1; //判断发送位  发送是由高位开始发送
  90   2          else
  91   2            SDA = 0;
  92   2          delay4us(1);
  93   2          SCL = 1; //置时钟线为高，通知被控器开始接收数据位
  94   2          delay4us(1);
  95   2          SCL = 0;
  96   2          delay4us(1);
  97   2        }
  98   1      }
  99          
 100          //产生ACK应答
 101          void I2C_Ack(void)
 102          {
 103   1        SCL = 0;
 104   1        delay4us(2);
 105   1        SDA = 1;
 106   1        delay4us(2);
 107   1        SDA = 0;
 108   1        delay4us(2);
 109   1        SCL = 1;
 110   1        delay4us(2);
 111   1        SCL = 0;
 112   1        delay4us(2);
 113   1        SDA = 1;
 114   1        delay4us(2);
C51 COMPILER V9.53.0.0   I2C                                                               07/22/2020 14:45:23 PAGE 3   

 115   1      }
 116          //不产生ACK应答
 117          void I2C_NAck(void)
 118          {
 119   1        SCL = 0;
 120   1        delay4us(2);
 121   1        SDA = 1;
 122   1        delay4us(2);
 123   1        SCL = 1;
 124   1        delay4us(2);
 125   1        SCL = 0;
 126   1        delay4us(2);
 127   1        SDA = 0;
 128   1        delay4us(2);
 129   1      }
 130          
 131          //字节数据接收函数
 132          //RcvByte();
 133          //功能:  用来接收从器件传来的数据,并判断总线错误(发应答信号)
 134          //ack  1 发送应答  0 不发送应答
 135          u8 RcvByte(u8 ack)
 136          {
 137   1        u8 retc = 0,
 138   1           i;
 139   1        IO_SDA(1); //配置SDA为输入
 140   1        SDA = 1;
 141   1        delay4us(15);
 142   1      
 143   1        for (i = 0; i < 8; i++)
 144   1        {
 145   2          SCL = 0; //置时钟线为低，准备接收数据位
 146   2          delay4us(2);
 147   2          SCL = 1; //置时钟线为高使数据线上数据有效
 148   2          delay4us(1);
 149   2          retc <<= 1;
 150   2          if (SDA)
 151   2            retc++; //读数据位,接收的数据位放入retc中
 152   2          delay4us(1);
 153   2        }
 154   1        IO_SDA(0); //恢复SDA双向io
 155   1        if (!ack)
 156   1          I2C_NAck(); //发送nACK
 157   1        else
 158   1          I2C_Ack(); //发送ACK
 159   1      
 160   1        return retc;
 161   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    453    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       7
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.

C51 COMPILER V9.53.0.0   I2C                                                               07/22/2020 14:45:23 PAGE 4   


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
