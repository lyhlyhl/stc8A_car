C51 COMPILER V9.60.0.0   TIMER                                                             07/21/2020 04:11:39 PAGE 1   


C51 COMPILER V9.60.0.0, COMPILATION OF MODULE TIMER
OBJECT MODULE PLACED IN .\timer.obj
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE ..\hardware\timer\timer.c LARGE OMF2 OPTIMIZE(2,SPEED) BROWSE INCDIR(..\har
                    -dware\delay;..\hardware\IIC;..\hardware\OLED;..\hardware\ADC;..\hardware\Mpu6050;..\hardware\KEY;..\hardware\LED;..\hard
                    -ware\PWM;..\hardware\pca;..\hardware\timer;..\hardware\PID;..\hardware\CCD) DEBUG PRINT(.\timer.lst) TABS(2) OBJECT(.\ti
                    -mer.obj)

line level    source

   1          #include "timer.h"
   2          
   3          int flag = 0;
   4          u8 busy[5]; 
   5          
   6          
   7          void Timer_uart_init() //串口中断初始化
   8          {
   9   1         SCON |= 0x50;                          //REN=1允许串行接受状态，串口工作模式2
  10   1         TMOD |= 0x00;                          //定时器1为模式0（16位自动重载）
  11   1         AUXR = 0X40;                           //开启1T模式`    PS：这一行不能或等于不然串口无法打开
  12   1         TL1 = (65535 - (22118400 / 4 / 115200)); //设置波特率重装值
  13   1         TH1 = (65535 - (22118400 / 4 / 115200)) >> 8;
  14   1         TR1 = 1; //开启定时器1
  15   1         ES = 1;  //开串口中断
  16   1         EA = 1;  // 开总中断
  17   1         busy[1] = 0;
  18   1      }
  19          
  20          
  21          //UART1中断
  22          void UartIsr() interrupt 4
  23          {
  24   1          u8 res;
  25   1        
  26   1          if(SCON  & 0x02)
  27   1          {
  28   2            SCON  &= ~0x02; // UART1_CLEAR_TX_FLAG;
  29   2              busy[1] = 0;
  30   2          }
  31   1          if(SCON  & 0x01)
  32   1          {
  33   2            SCON  &= ~0x01;//  UART1_CLEAR_RX_FLAG;
  34   2      
  35   2            res = SBUF;
  36   2      
  37   2          }
  38   1      }
  39          
  40          //--------------------------------------------------------------------------------------------------------
             ------------
  41          //  @brief      串口字节输出
  42          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
  43          //  @param      dat             需要发送的字节
  44          //  @return     void        
  45          //  Sample usage:               uart_putchar(UART_1,0xA5);       // 串口1发送0xA5
  46          //--------------------------------------------------------------------------------------------------------
             ------------
  47          void uart_putchar(UARTN_enum uart_n,u8 dat)
  48          {
  49   1      //  switch(uart_n)
  50   1      //  {
C51 COMPILER V9.60.0.0   TIMER                                                             07/21/2020 04:11:39 PAGE 2   

  51   1      //    case UART_1:
  52   1            while (busy[1]);
  53   1            busy[1] = 1;
  54   1            SBUF = dat;
  55   1      //        break;
  56   1      //    case UART_2:
  57   1      //      while (busy[2]);
  58   1      //      busy[2] = 1;
  59   1      //      S2BUF = dat;
  60   1      //        break;
  61   1      //    case UART_3:
  62   1      //      while (busy[3]);
  63   1      //      busy[3] = 1;
  64   1      //      S3BUF = dat;
  65   1      //        break;
  66   1      //    case UART_4:
  67   1      //      while (busy[4]);
  68   1      //      busy[4] = 1;
  69   1      //      S4BUF = dat;
  70   1      //        break;
  71   1      //  }
  72   1      }
*** WARNING C280 IN LINE 47 OF ..\hardware\timer\timer.c: 'uart_n': unreferenced local variable
  73          
  74          
  75          //--------------------------------------------------------------------------------------------------------
             ------------
  76          //  @brief      串口发送数组
  77          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
  78          //  @param      *buff           要发送的数组地址
  79          //  @param      len             发送长度
  80          //  @return     void
  81          //  Sample usage:               uart_putbuff(UART_1,&a[0],5);
  82          //--------------------------------------------------------------------------------------------------------
             ------------
  83          void uart_putbuff(UARTN_enum uart_n,u8 *p,u16 len)
  84          {
  85   1          while(len--)
  86   1              uart_putchar(uart_n,*p++);
  87   1      }
  88          
  89          
  90          //--------------------------------------------------------------------------------------------------------
             ------------
  91          //  @brief      串口发送字符串
  92          //  @param      uart_n          串口模块号(USART_1,USART_2,USART_3,USART_4)
  93          //  @param      *str            要发送的字符串地址
  94          //  @return     void
  95          //  Sample usage:               uart_putstr(UART_1,"i lvoe you"); 
  96          //--------------------------------------------------------------------------------------------------------
             ------------
  97          void uart_putstr(UARTN_enum uart_n,u8 *str)
  98          {
  99   1          while(*str)
 100   1          {
 101   2              uart_putchar(uart_n,*str++);
 102   2          }
 103   1      }
 104          
 105          
 106          
 107          void Timer0_init() //定时器中断0初始化
C51 COMPILER V9.60.0.0   TIMER                                                             07/21/2020 04:11:39 PAGE 3   

 108          {
 109   1         TMOD |= 0x00;
 110   1         //AUXR|=0x80; //开启1T模式
 111   1         TL0 = 0x30; //定时器1ms
 112   1         TH0 = 0xf8;
 113   1         TR0 = 1;
 114   1         ET0 = 1;
 115   1         EA = 1;
 116   1      }
 117          
 118          void speed_count_init() //设定T3T4计数器读取编码器的值
 119          {
 120   1         T3L = 0x00;
 121   1         T3H = 0x00;
 122   1      
 123   1         T4L = 0x00;
 124   1         T4H = 0x00;
 125   1      
 126   1         IE2 = 0x60;
 127   1         T4T3M = 0xcc;
 128   1      
 129   1         EA = 1;
 130   1      }
 131          
 132          float GetCarSpeed(int dat)
 133          {
 134   1         float speed;
 135   1         speed = (float)dat;
 136   1         speed = speed / 70 * 0.045 * 3.14;
 137   1         speed = speed * 20;
 138   1         return speed;
 139   1      }
 140          
 141          extern int dat1, dat2;
 142          void time0_itp() interrupt 1 //定时器0中断服务函数
 143          {
 144   1         static int cnt = 0; //设置计数 到50读取计数器计数值
 145   1         if (cnt >= 50)
 146   1         {
 147   2            TR0 = 0;
 148   2      
 149   2            flag = 1;
 150   2            cnt = 0;
 151   2            LED = ~LED;
 152   2           
 153   2            dat1 = (int)(T3H << 8);
 154   2            dat1 = dat1 | (int)T3L;
 155   2            dat2 = (int)(T4H << 8);
 156   2            dat2 = dat2 | (int)T4L;
 157   2            T4T3M = 0x44;
 158   2            T3H = 0;
 159   2            T3L = 0;
 160   2            T4H = 0;
 161   2            T4L = 0;
 162   2            EA = 1;
 163   2            T4T3M = 0xCC;
 164   2            TR0 = 1;
 165   2         }
 166   1         cnt++;
 167   1      }
 168          void TM3() interrupt 19
 169          {
C51 COMPILER V9.60.0.0   TIMER                                                             07/21/2020 04:11:39 PAGE 4   

 170   1         //LED = !LED;
 171   1         AUXINTIF &= ~T3IF;
 172   1      }
 173          
 174          void TM4() interrupt 20
 175          {
 176   1         //LED = !LED;
 177   1         AUXINTIF &= ~T4IF;
 178   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    596    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      9      19
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
