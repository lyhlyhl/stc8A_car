C51 COMPILER V9.53.0.0   ADC                                                               07/14/2020 14:30:58 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE ADC
OBJECT MODULE PLACED IN .\adc.obj
COMPILER INVOKED BY: F:\MDK5\C51\BIN\C51.EXE ..\hardware\ADC\adc.c LARGE OMF2 OPTIMIZE(2,SPEED) BROWSE INCDIR(..\hardwar
                    -e\delay;..\hardware\IIC;..\hardware\OLED;..\hardware\ADC;..\hardware\Mpu6050;..\hardware\KEY;..\hardware\LED) DEBUG PRIN
                    -T(.\adc.lst) TABS(3) OBJECT(.\adc.obj)

line level    source

   1          #include "adc.h"
   2          #include "math.h"
   3          
   4          
   5          u16 GetADCResult(u8 ch)         //这里如有不懂 请仔细看资料
   6          {   
   7   1          u16 adc_value;     
   8   1          P1M0=0x00;
   9   1          P1M1=0x01;
  10   1         //选择P1口的哪一口 这里的口和ch要对应才能达到选择该口
  11   1          ADC_CONTR = ADC_POWER | ADC_START | ch ;//启动adc电源，开始A/D转换 ，配置采集口
  12   1                                                               // 这么用语句的主要原因就是不能位寻址
  13   1                                                               //   通道选择在后3位所以直接用一个整数表示ch
  14   1                                                               //例如ch=6 那么对应的后三位就是110           
  15   1          _nop_();         //Must wait before inquiry ， 
  16   1          _nop_(); //设置ADC_CONTR寄存器后需加4个CPU时钟周期的延时，才能保证值被写入ADC_CONTR寄存器 
  17   1      //    _nop_(); 
  18   1      //    _nop_(); 
  19   1          while (!(ADC_CONTR & ADC_FLAG));//Wait complete flag       等待转化完成
  20   1         ADC_CONTR &= ~ADC_FLAG;         //Close ADC 将标志位清零等待下次硬件置1
  21   1         //也可以写成 ADC_CONTR= ADC_CONTR & ( ~ADC_FLAG)
  22   1       
  23   1         //只读取8位ADC采集结果 并 以5v为基准进行换算
  24   1          //Vo=ADC_RES;//*25/256;                 //Return ADC result（为显示整数，这里将电压值扩大了十倍） 
  25   1                                               //5/256  因为是8位 把5V分成256份  ADC_RES为采集的份数
  26   1                                               //ADC_RES*（5/256） 为采集的电压值  然后扩大10倍便于计算
  27   1         
  28   1         ADCCFG=0x20;
  29   1         adc_value = ADC_RES;  //存储 ADC 的 10 位结果的高 2 位
  30   1         adc_value <<= 8;
  31   1         //adc_value = ADC_RESL; 
  32   1         adc_value |= ADC_RESL;  //存储 ADC 的 10 位结果的低 8 位
  33   1         //adc_value = adc_value*25;
  34   1          return adc_value;
  35   1      } 


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    101    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----       3
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
