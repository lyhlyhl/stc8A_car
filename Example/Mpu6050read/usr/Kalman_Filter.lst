C51 COMPILER V9.53.0.0   KALMAN_FILTER                                                     07/14/2020 02:20:06 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE KALMAN_FILTER
OBJECT MODULE PLACED IN .\Kalman_Filter.obj
COMPILER INVOKED BY: F:\MDK5\C51\BIN\C51.EXE ..\hardware\Mpu6050\Kalman_Filter.c LARGE OMF2 OPTIMIZE(2,SPEED) BROWSE INC
                    -DIR(..\hardware\delay;..\hardware\IIC;..\hardware\OLED;..\hardware\ADC;..\hardware\Mpu6050;..\hardware\KEY;..\hardware\L
                    -ED) DEBUG PRINT(.\Kalman_Filter.lst) TABS(3) OBJECT(.\Kalman_Filter.obj)

line level    source

   1          #include "Kalman_Filter.h"
   2          
   3          
   4          //??????????
   5          
   6          float dt=0.001;//??:dt????kalman???????
   7          
   8          float angle, angle_dot;//??????
   9          
  10          float PP[2][2] = {(1, 0),(0, 1)};
  11          
  12          float Pdot[4] ={ 0,0,0,0};
  13          
  14          float Q_angle=0.001, Q_gyro=0.005; //角度置信度,角速度置信度
  15          
  16          float R_angle=0.5 ,C_0 = 1;
  17          
  18          float q_bias, angle_err, PCt_0, PCt_1, E, K_0, K_1, t_0, t_1;
  19          
  20          float Kalman_Filter(float angle_m, float gyro_m)//angleAx ? gyroGy
  21          {
  22   1              angle+=(gyro_m-q_bias) * dt;
  23   1              angle_err = angle_m - angle;
  24   1              Pdot[0]=Q_angle - PP[0][1] - PP[1][0];
  25   1              Pdot[1]=- PP[1][1];
  26   1              Pdot[2]=- PP[1][1];
  27   1              Pdot[3]=Q_gyro;
  28   1              PP[0][0] += Pdot[0] * dt;
  29   1              PP[0][1] += Pdot[1] * dt;
  30   1              PP[1][0] += Pdot[2] * dt;
  31   1              PP[1][1] += Pdot[3] * dt;
  32   1              PCt_0 = C_0 * PP[0][0];
  33   1              PCt_1 = C_0 * PP[1][0];
  34   1              E = R_angle + C_0 * PCt_0;
  35   1              K_0 = PCt_0 / E;
  36   1              K_1 = PCt_1 / E;
  37   1              t_0 = PCt_0;
  38   1              t_1 = C_0 * PP[0][1];
  39   1              PP[0][0] -= K_0 * t_0;
  40   1              PP[0][1] -= K_0 * t_1;
  41   1              PP[1][0] -= K_1 * t_0;
  42   1              PP[1][1] -= K_1 * t_1;
  43   1              angle += K_0 * angle_err; //????
  44   1              q_bias += K_1 * angle_err;
  45   1              angle_dot = gyro_m-q_bias;//?????
  46   1              return angle;
  47   1      }
  48          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1349    ----
   CONSTANT SIZE    =   ----    ----
C51 COMPILER V9.53.0.0   KALMAN_FILTER                                                     07/14/2020 02:20:06 PAGE 2   

   XDATA SIZE       =     96       8
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
